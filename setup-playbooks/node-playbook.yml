---
- hosts: all
  become: true
  tasks:

    ## apt dependencies ##
    - name: Install packages needed for apt HTTPS connexion
      apt:
        name: "{{ packages }}"
        state: present
        update_cache: yes
      vars:
        packages:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg-agent
          - software-properties-common
        

    ## Docker installation ##
    - name: Download apt signing key for Docker
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add apt repository for stable version
      apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable
        state: present

    - name: Install docker and its dependecies
      apt:
        name: "{{ packages }}"
        state: present
        update_cache: yes
      vars:
        packages:
          - docker-ce
          - docker-ce-cli
          - containerd.io
      notify:
        - docker status
    
    - name: Add vagrant user to docker group
      user:
        name: vagrant
        group: docker

    
    ## Installing K8s ##

    # swap needs to be disabled in order for kubelet to function correctly
    - name: Remove swapfile from /etc/fstab
      mount:
        name: "{{ item }}"
        fstype: swap
        state: absent
      with_items:
        - swap
        - none

    - name: Disable swap
      command: swapoff -a
      when: ansible_swaptotal_mb > 0

    - name: Download apt signing key for K8s
      apt_key:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
        state: present

    - name: Adding apt repository for Kubernetes
      apt_repository:
        repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
        state: present
        filename: kubernetes.list

    - name: Install K8s binaries
      apt:
        name: "{{ packages }}"
        state: present
        update_cache: yes
      vars:
        packages:
          - kubelet
          - kubeadm
          - kubectl


    ## K8s configuration ##
    - name: Configure node ip
      lineinfile:
        path: /etc/systemd/system/kubelet.service.d/10-kubeadm.conf
        line: Environment="KUBELET_EXTRA_ARGS=--node-ip='{{ node_ip }}'"

    - name: Restart kubelet for node IP to register
      service:
        name: kubelet
        daemon_reload: yes
        state: restarted

    # Join the worker nodes to the K8s cluster using the join command generated by the master node
    - name: Copy the join command to server location
      copy: 
        src: join-command
        dest: /tmp/join-command.sh 
        mode: 0777

    - name: Remove containerd configuration
      command: rm /etc/containerd/config.toml
      
    - name: Restart containerd
      command: systemctl restart containerd

    - name: Join the node to cluster
      command: sh /tmp/join-command.sh/join-command/k8s-master/join-command

  # Handler for checking Docker daemon
  handlers:
    - name: docker status
      service: name=docker state=started